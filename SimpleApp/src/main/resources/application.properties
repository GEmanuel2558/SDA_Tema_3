#Configuram portul aplicatiei. Astfel nu ne suprapunem peste alte servicii
server.port=9090
#Permite folosirea noului protocol numit http2
server.http2.enabled=true
#Alegem ca mecanismul ce transforma un obiect Java in JSON sa fie json-b. Valoarea implicita este gson.
#Json-B este mai bun din pct de vederea al performantelor
spring.http.converters.preferred-json-mapper=jsonb
#Mai jos facem configuratiile pentru comunicarea cu baza de date. Si anume incepem prin a specifica faptul ca comunicam cu MySql ca si baza de date
spring.jpa.database=mysql
#Cerem de la acesta aplicatie sa ne arate toate tranzactiile ce se fac cu baza de date.
spring.jpa.show-sql=true
#Ii spunem aplicatiei Java, sa mentina in permananta conexiunea activa cu baza de date. Astfel optinem niste performante mai bune
spring.datasource.testWhileIdle = true
#Apelam select 1 pe baza de date cu scopul de a vedea daca mai este activa or ba. Daca nu facem asta, atunci urmatoarea tranzactie
#va genera mesajul de eroare si nu comanda de mai jos. Acest lucru este folosit ca sa stim cat de repede cu putinta cand ceva merge prost
spring.datasource.validationQuery = SELECT 1
#Linia de mai jos ii spune lui Java, sa distruga baza de date numita demo_app si sa recreieze de la 0 toate tabelele folosite
spring.jpa.hibernate.ddl-auto=create
#Pentru a ne conecta la baza de date, avem nevoie de un user si o parola. Acestea informatii sunt exact acelea folosite cand am invatat sa lucram cu MySql Workbeanch
spring.datasource.username=root
spring.datasource.password=Emy123456_
#Mai jos ii spunem ce schema din serverul jdbc:mysql://localhost:3306 dorim sa ne conectam si anume dorim sa accesam demo_app
spring.datasource.url=jdbc:mysql://localhost:3306/demo_app
#Mai jos ii spunem lui Java, ce clasa sa foloseasca pentru a transla codul Java intr-o forma ce poate fi inteleasa de catre baza de date
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#Liniile de mai jos, depasesc cu mult scopul cursului. Asa ca le puteti ignora
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#Disable debugger mode
debug=false
